{"version":3,"sources":["Components/Particles/ParticlesContainer.js","actions/auth.js","actions/types.js","actions/nowPlaying.js","actions/songAnalysis.js","Components/Particles/index.js","reducers/auth.js","Components/logo.svg","Components/MusicPlayer/Authentication.js","Components/icon.svg","Components/MusicPlayer/Footer.js","Components/MusicPlayer/Search.js","Components/MusicPlayer/index.js","reducers/nowPlaying.js","Components/SongAnalyizer.js","reducers/songAnalysis.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["songStartTimestamp","timePassed","currentSegment","newToken","SET_ACCESS_TOKEN","SET_CURRENT_SONG","SET_SONG_ANALYSIS","setNowPlaying","state","dispatch","track","type","payload","isPlaying","artists","durationMs","id","image","name","uri","progressMs","setSongAnalysis","bars","beats","sections","segments","tatums","speed","colorH","colorS","dance","opacity","vertical","horizontal","ParticlesContainer","props","getContainer","container","options","particles","move","noise","delay","value","random","enable","setNoise","init","update","generate","p","moveSpeed","color","h","s","noiseAngle","velocity","angle","length","togglePlay","requestAnimationFrame","tick","cancelAnimationFrame","timeKeeper","date","Date","progress","undefined","start","i","Math","floor","decibels","loudness_start","timbre","flatness","brightness","attack","mids","isNaN","containerRef","createRef","ParticleOptions","particlesOptions","duration","songEndTimestamp","remainingDuration","this","current","getTime","style","pointerEvents","Component","connect","ParticleVisualizer","className","getHashParams","a","hashParams","r","q","window","location","hash","substring","e","exec","decodeURIComponent","access_token","initialState","accessToken","isLoggedIn","setToken","action","token","getToken","useEffect","src","logo","alt","href","Footer","class","icon","spotifyWebApi","Spotify","useState","search","setSearch","tracks","setTracks","message","setMessage","selected","setSelected","zen","setZen","zenPlayer","setZenPlayer","setAccessToken","prev","handleSubmit","preventDefault","target","abort","searchTracks","limit","then","data","newTracks","items","map","item","push","err","console","error","returnedTracks","handleSelected","onClick","onSubmit","htmlFor","onChange","album","images","url","styles","bgColor","loaderColor","sliderColor","trackArtistColor","trackNameColor","uris","callback","getNowPlaying","fetch","method","headers","Authorization","mode","cache","res","json","result","catch","log","textAlign","combineReducers","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","Particles","position","top","left","right","bottom","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1ea1bdab.chunk.js","sourcesContent":["import React, { Component, createRef } from 'react';\r\nimport Particles from 'react-tsparticles';\r\nimport particlesOptions from './particles.json';\r\nimport { connect } from 'react-redux';\r\nimport { setNowPlaying } from '../../actions/nowPlaying.js';\r\nimport { setSongAnalysis } from '../../actions/songAnalysis.js';\r\n\r\nlet speed = 1;\r\nlet colorH = 141;\r\nlet colorS = 73;\r\nlet dance = 0;\r\nlet opacity = 0.8;\r\nlet vertical = 0;\r\nlet horizontal = 0;\r\nlet songStartTimestamp,\r\n  // songEndTimestamp,\r\n  timePassed,\r\n  currentSegment;\r\n// currentSection,\r\n// currentBar,\r\n// currentBeat,\r\n// currentTatum;\r\n\r\nclass ParticlesContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.containerRef = createRef();\r\n    this.ParticleOptions = particlesOptions;\r\n    this.isPlaying = this.props.isPlaying;\r\n    this.duration = this.props.duration;\r\n    this.progress = this.props.progress;\r\n    this.songStartTimestamp = null;\r\n    this.songEndTimestamp = null;\r\n    this.remainingDuration = this.props.duration - this.props.progress;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.segments = this.props.segments;\r\n    currentSegment = this.props.segments[0];\r\n    // currentBeat = this.props.beats[0];\r\n    this.containerRef.current = this.getContainer(this.containerRef.current);\r\n  }\r\n\r\n  getContainer = (container) => {\r\n    container.options.particles.move.noise.delay.value = 0.25;\r\n    container.options.particles.move.noise.delay.random.enable = true;\r\n\r\n    container.setNoise({\r\n      init: function () {},\r\n      update: function () {},\r\n      generate: function (p) {\r\n        p.opacity.value = opacity;\r\n        p.moveSpeed = speed;\r\n        p.color.value.h = colorH;\r\n        p.color.value.s = colorS;\r\n        if (!p.noiseAngle) {\r\n          p.noiseAngle = 0;\r\n        }\r\n        p.velocity.horizontal = horizontal;\r\n        // p.velocity.vertical = vertical; //Not sure if I want to use this yet, makes the particles feel more mechanical and the latency more noticeable\r\n        // console.log('p.velocity', p.velocity)\r\n        p.noiseAngle = dance;\r\n        return {\r\n          angle: p.noiseAngle,\r\n          length: 0.2,\r\n        };\r\n      },\r\n    });\r\n    return container;\r\n  };\r\n\r\n  componentDidUpdate() {\r\n    this.segments = this.props.segments;\r\n    this.isPlaying = this.props.isPlaying;\r\n    this.remainingDuration = this.props.duration - this.props.progress;\r\n    this.duration = this.props.duration;\r\n    this.progress = this.props.progress;\r\n\r\n    let date = new Date();\r\n    songStartTimestamp = date.getTime();\r\n\r\n    this.togglePlay();\r\n  }\r\n  togglePlay = () => {\r\n    if (this.isPlaying) {\r\n      this.requestAnimationFrame = requestAnimationFrame(this.tick);\r\n    } else {\r\n      speed = 1;\r\n      colorH = 141;\r\n      colorS = 73;\r\n      dance = 0;\r\n      opacity = 0.8;\r\n      vertical = 0;\r\n      horizontal = 0;\r\n      cancelAnimationFrame(this.requestAnimationFrame);\r\n    }\r\n  };\r\n\r\n  tick = () => {\r\n    this.timeKeeper();\r\n    this.requestAnimationFrame = requestAnimationFrame(this.tick);\r\n  };\r\n\r\n  timeKeeper = () => {\r\n    const date = new Date();\r\n    timePassed = date - songStartTimestamp + this.progress;\r\n\r\n    if (\r\n      this.props.segments.length > 0 &&\r\n      timePassed > 0 &&\r\n      this.props.segments[0].start !== undefined &&\r\n      this.props.isPlaying\r\n    ) {\r\n      for (let i = 0; this.props.segments.length >= i; i++) {\r\n        if (i < this.props.segments.length - 1) {\r\n          if (\r\n            Math.floor(this.props.segments[i].start * 1000) < timePassed &&\r\n            Math.floor(this.props.segments[i + 1].start * 1000) > timePassed &&\r\n            this.props.segments[i] !== currentSegment\r\n          ) {\r\n            currentSegment = this.props.segments[i];\r\n            let decibels = currentSegment.loudness_start + 60;\r\n            let color = currentSegment.timbre[0];\r\n            let flatness = currentSegment.timbre[2];\r\n            let brightness = currentSegment.timbre[1];\r\n            let attack = currentSegment.timbre[3];\r\n            let mids = currentSegment.timbre[5];\r\n\r\n            speed = decibels * 0.2;\r\n            colorS = flatness * 10;\r\n            if (colorS > 90) {\r\n              colorS = 90;\r\n            } else if (colorS < 50) {\r\n              colorS = 50;\r\n            }\r\n            colorH = (color * speed) / 1.5;\r\n            // console.log('colorH', colorH);\r\n            // if (colorH > 360) {\r\n            //   colorH = 360;\r\n            // } else if (colorH < 0) {\r\n            //   colorH = 0;\r\n            // }\r\n            vertical = ((attack % speed) / 2) % 2;\r\n            if (isNaN(vertical)) {\r\n              vertical = 0;\r\n            }\r\n            // console.log('vertical', vertical);\r\n            if (i % 20 === 0) {\r\n              // horizontal = -mids % speed;\r\n              dance = brightness / 2 - mids;\r\n            } else {\r\n              dance = brightness * 2 + mids;\r\n              // horizontal = mids % speed;\r\n            }\r\n\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n  componentWillUnmount() {\r\n    this.togglePlay();\r\n    cancelAnimationFrame(this.requestAnimationFrame);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Particles\r\n          style={{ pointerEvents: 'none' }}\r\n          container={this.containerRef}\r\n          id='tsparticles'\r\n          options={this.ParticleOptions}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst mapStateTopProps = (state) => ({\r\n  isPlaying: state.setNowPlaying.isPlaying,\r\n  duration: state.setNowPlaying.durationMs,\r\n  progress: state.setNowPlaying.progressMs,\r\n  sections: state.setSongAnalysis.sections,\r\n  segments: state.setSongAnalysis.segments,\r\n  bars: state.setSongAnalysis.bars,\r\n  beats: state.setSongAnalysis.beats,\r\n  tatums: state.setSongAnalysis.tatums,\r\n});\r\nexport default connect(mapStateTopProps, { setNowPlaying, setSongAnalysis })(\r\n  ParticlesContainer\r\n);\r\n","import { SET_ACCESS_TOKEN } from './types';\r\n\r\nlet newToken;\r\n\r\nconst getHashParams = async () => {\r\n  var hashParams = {};\r\n  var e,\r\n    r = /([^&;=]+)=?([^&;]*)/g,\r\n    q = window.location.hash.substring(1);\r\n  while ((e = r.exec(q))) {\r\n    hashParams[e[1]] = decodeURIComponent(e[2]);\r\n  }\r\n  newToken = hashParams.access_token;\r\n};\r\nexport const getToken = () => (dispatch) => {\r\n  getHashParams();\r\n  if (newToken !== null) {\r\n    return dispatch({\r\n      type: SET_ACCESS_TOKEN,\r\n      payload: {\r\n        accessToken: newToken,\r\n        isLoggedIn: true,\r\n      },\r\n    });\r\n  }\r\n};\r\n\r\n","export const SET_ACCESS_TOKEN = 'SET_ACCESS_TOKEN';\r\nexport const SET_CURRENT_SONG = 'SET_CURRENT_SONG';\r\nexport const SET_SONG_ANALYSIS = 'SET_SONG_ANALYSIS';\r\n","import { SET_CURRENT_SONG } from './types';\r\n\r\nexport const setNowPlaying = (state) => (dispatch) => {\r\n  let track = state.track;\r\n  return dispatch({\r\n    type: SET_CURRENT_SONG,\r\n    payload: {\r\n      isPlaying: state.isPlaying,\r\n      artists: track.artists,\r\n      durationMs: track.durationMs,\r\n      id: track.id,\r\n      image: track.image,\r\n      name: track.name,\r\n      uri: track.uri,\r\n      progressMs: state.progressMs,\r\n    },\r\n  });\r\n};\r\n","import { SET_SONG_ANALYSIS } from './types';\r\n\r\nexport const setSongAnalysis = (state) => (dispatch) => {\r\n  // console.log('newSonganalysis', state);\r\n  return dispatch({\r\n    type: SET_SONG_ANALYSIS,\r\n    payload: {\r\n      bars: state.bars,\r\n      beats: state.beats,\r\n      sections: state.sections,\r\n      segments: state.segments,\r\n      tatums: state.tatums,\r\n      track: state.track,\r\n    },\r\n  });\r\n};\r\n","import React from 'react';\r\nimport ParticlesContainer from './ParticlesContainer';\r\nconst ParticleVisualizer = () => {\r\n  return (\r\n    <>\r\n      <header className='App-header'>\r\n        <ParticlesContainer />\r\n      </header>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ParticleVisualizer;\r\n","import { SET_ACCESS_TOKEN } from '../actions/types';\r\n\r\nconst initialState = {\r\n  accessToken: null,\r\n  isLoggedIn: false,\r\n};\r\n\r\nexport default function setToken(state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case SET_ACCESS_TOKEN:\r\n      return {\r\n        ...state,\r\n        accessToken: payload.accessToken,\r\n        isLoggedIn: payload.isLoggedIn,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo.bb209a6a.svg\";","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getToken } from '../../actions/auth.js';\r\nimport setToken from '../../reducers/auth';\r\nimport logo from '../logo.svg';\r\nimport './authenticationStyles.css';\r\nfunction Authentication({ getToken }) {\r\n  useEffect(() => {\r\n    /**\r\n     * Obtains parameters from the hash of the URL\r\n     * @return Object\r\n     */\r\n    const getHashParams = () => {\r\n      var hashParams = {};\r\n      var e,\r\n        r = /([^&;=]+)=?([^&;]*)/g,\r\n        q = window.location.hash.substring(1);\r\n      while ((e = r.exec(q))) {\r\n        hashParams[e[1]] = decodeURIComponent(e[2]);\r\n      }\r\n      let hash = hashParams.access_token;\r\n      if (hash) {\r\n        getToken();\r\n      }\r\n    };\r\n    getHashParams();\r\n  }, [getToken]);\r\n\r\n  return (\r\n    <div className='authenticationBody'>\r\n      <div className='introTitle'>\r\n        Zenify\r\n        <br />\r\n        <span className='introName'> By Silvanus Designs </span>\r\n      </div>\r\n      <img src={logo} alt='Silvanus Designs' className='introLogo' />\r\n      <a href='/login'>\r\n        <button className='loginButton'>Spotify Login Required</button>\r\n      </a>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateTopProps = (state) => ({\r\n  token: state.setToken.accessToken,\r\n});\r\nexport default connect(mapStateTopProps, { getToken, setToken })(\r\n  Authentication\r\n);\r\n","export default __webpack_public_path__ + \"static/media/icon.43aa84d1.svg\";","import React from 'react';\r\nimport './footer.css';\r\n\r\nimport icon from '../icon.svg';\r\nfunction Footer() {\r\n  return (\r\n    <div>\r\n      <div className='footerTextContainer'>\r\n        <div className='linkContainer'>\r\n          <a href='https://github.com/SilasCundiff/zenify'>\r\n            <i class='fab fa-github-square'></i>\r\n          </a>\r\n          <a href='https://developer.spotify.com/documentation/web-api/'>\r\n            <i class='fab fa-spotify'></i>\r\n          </a>\r\n          <a href='https://silas-cundiff.dev/'>\r\n            <img src={icon} alt='Silvanus Designs' className='footerLogoIcon' />\r\n          </a>\r\n        </div>\r\n        <span className='spotifySpan'>Music provided by Spotify</span>\r\n        <span className='reactSpan'>\r\n          Made with <i class='fas fa-heart'></i> using React\r\n        </span>\r\n        <footer className='footer'>\r\n          Zenify - Silvanus Designs - Silas Cundiff - Copyright&copy; 2021\r\n        </footer>\r\n      </div>\r\n      <img src={icon} alt='Silvanus Designs' className='footerLogo' />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { setNowPlaying } from '../../actions/nowPlaying.js';\r\nimport Spotify from 'spotify-web-api-js';\r\nimport SpotifyPlayer from 'react-spotify-web-playback';\r\nimport './searchStyles.css';\r\nimport Footer from './Footer';\r\nconst spotifyWebApi = new Spotify();\r\nfunction Search({ token, setNowPlaying }) {\r\n  const [search, setSearch] = useState('');\r\n  const [tracks, setTracks] = useState();\r\n  const [message, setMessage] = useState('Enter a Track');\r\n  const [selected, setSelected] = useState({\r\n    type: '',\r\n    id: '',\r\n  });\r\n  const [zen, setZen] = useState(false);\r\n  const [zenPlayer, setZenPlayer] = useState(false);\r\n\r\n  //Taken from Spotify web api example and altered to fit my needs\r\n  spotifyWebApi.setAccessToken(token);\r\n  let prev = null;\r\n  let results = null;\r\n\r\n  const onUserSubmit = (q) => {\r\n    if (prev !== null) {\r\n      prev.abort();\r\n    }\r\n\r\n    prev = spotifyWebApi.searchTracks(q, { limit: 20 });\r\n    prev\r\n      .then(\r\n        (data) => {\r\n          let newTracks = [];\r\n          prev = null;\r\n          results = data;\r\n          results.tracks.items.map((item) => {\r\n            return newTracks.push(item);\r\n          });\r\n          return newTracks;\r\n        },\r\n        (err) => {\r\n          console.error(err);\r\n        }\r\n      )\r\n      .then((returnedTracks) => {\r\n        // console.log('returnedTracks', returnedTracks);\r\n        if (returnedTracks.length > 0) {\r\n          setTracks(returnedTracks);\r\n          setMessage('Enter a Track');\r\n        } else {\r\n          setMessage('No Results Found, please try a different track name');\r\n        }\r\n      });\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setSearch(e.target.value);\r\n  };\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setSearch(e.target.value);\r\n\r\n    if (search) {\r\n      await onUserSubmit(search);\r\n    }\r\n  };\r\n  const handleSelected = (type, id) => {\r\n    setSelected({\r\n      ...selected,\r\n      type: `${type}`,\r\n      id: `${id}`,\r\n    });\r\n\r\n    // console.log('selected', selected);\r\n  };\r\n\r\n  const getNowPlaying = (state) => {\r\n    setNowPlaying(state);\r\n  };\r\n  const handleClick = () => {\r\n    setZen(!zen);\r\n  };\r\n  const handleClick2 = () => {\r\n    setZenPlayer(!zenPlayer);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className='buttonContainer'>\r\n        <button\r\n          className={`ZenModePlayer ${zenPlayer ? 'zen' : 'nozen'}`}\r\n          id='ZenPlayerButton'\r\n          onClick={handleClick2}\r\n        >\r\n          Zenify Player\r\n        </button>\r\n        <button\r\n          id='ZenButton'\r\n          className={`ZenMode ${zen ? 'zen' : 'nozen'}`}\r\n          onClick={handleClick}\r\n        >\r\n          Zenify Search\r\n        </button>\r\n      </div>\r\n      <div className={`spotifyBody ${zen ? 'zen' : 'nozen'}`}>\r\n        <div className='Search'>\r\n          <form className='SearchForm show' onSubmit={handleSubmit}>\r\n            <label htmlFor='trackSearch'>{message}</label>\r\n            <input\r\n              name='trackSearch'\r\n              type='text'\r\n              value={search || ''}\r\n              onChange={handleChange}\r\n            />\r\n          </form>\r\n        </div>\r\n\r\n        <div className={`searchResultsTable ${tracks ? 'show' : 'hide'}`}>\r\n          <table>\r\n            {tracks ? (\r\n              <thead>\r\n                <tr>\r\n                  <th>Album cover</th>\r\n                  <th>Track Name</th>\r\n                  <th>Album</th>\r\n                  <th>Artist</th>\r\n                </tr>\r\n              </thead>\r\n            ) : null}\r\n\r\n            {tracks ? (\r\n              <tbody>\r\n                {tracks.map((track) => {\r\n                  return (\r\n                    <tr key={`${track.type}:${track.id}`}>\r\n                      <td>\r\n                        <img\r\n                          className='searchResultAlbumImage'\r\n                          src={track.album.images[2].url}\r\n                          alt={`${track.album.name}`}\r\n                        />\r\n                      </td>\r\n                      <td\r\n                        onClick={() => {\r\n                          handleSelected(track.type, track.id);\r\n                        }}\r\n                      >\r\n                        {track.name}\r\n                      </td>\r\n                      <td\r\n                        onClick={() => {\r\n                          handleSelected(track.album.type, track.album.id);\r\n                        }}\r\n                      >\r\n                        {track.album.name}\r\n                      </td>\r\n                      <td\r\n                        onClick={() => {\r\n                          handleSelected(\r\n                            track.artists[0].type,\r\n                            track.artists[0].id\r\n                          );\r\n                        }}\r\n                      >\r\n                        {track.artists[0].name}\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            ) : null}\r\n          </table>\r\n        </div>\r\n      </div>\r\n      <div className={`Player ${zenPlayer ? 'zen' : 'nozen'}`}>\r\n        {selected.id ? (\r\n          <SpotifyPlayer\r\n            styles={{\r\n              bgColor: '#191414',\r\n              color: '#1DB954',\r\n              loaderColor: '#1DB954',\r\n              sliderColor: '#1DB954',\r\n              trackArtistColor: '#1DB954',\r\n              trackNameColor: '#1DB954',\r\n            }}\r\n            token={token}\r\n            uris={[`spotify:${selected.type}:${selected.id}`]}\r\n            callback={(state) => {\r\n              getNowPlaying(state);\r\n            }}\r\n          />\r\n        ) : null}\r\n      </div>\r\n      {!zen ? <Footer /> : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect(null, { setNowPlaying })(Search);\r\n","import React from 'react';\r\nimport Authentication from './Authentication';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Search from './Search';\r\nfunction MusicPlayer({ isLoggedIn, token }) {\r\n  return (\r\n    <div>\r\n      {!isLoggedIn ? <Authentication /> : null}\r\n      {isLoggedIn && <Search token={token} />}\r\n    </div>\r\n  );\r\n}\r\nMusicPlayer.propTypes = {\r\n  token: PropTypes.string,\r\n  isLoggedIn: PropTypes.bool,\r\n};\r\nconst mapStateTopProps = (state) => ({\r\n  token: state.setToken.accessToken,\r\n  isLoggedIn: state.setToken.isLoggedIn,\r\n});\r\nexport default connect(mapStateTopProps)(MusicPlayer);\r\n","import { SET_CURRENT_SONG } from '../actions/types';\r\n\r\nconst initialState = {\r\n  isPlaying: false,\r\n  artists: '',\r\n  durationMs: 0,\r\n  id: '',\r\n  image: '',\r\n  name: '',\r\n  uri: '',\r\n};\r\n\r\nexport default function setNowPlaying(state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case SET_CURRENT_SONG:\r\n      return {\r\n        ...state,\r\n        isPlaying: payload.isPlaying,\r\n        artists: payload.artists,\r\n        durationMs: payload.durationMs,\r\n        id: payload.id,\r\n        image: payload.image,\r\n        name: payload.name,\r\n        uri: payload.uri,\r\n        progressMs: payload.progressMs,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport setToken from '../reducers/auth';\r\nimport setNowPlaying from '../reducers/nowPlaying';\r\nimport { setSongAnalysis } from '../actions/songAnalysis';\r\nfunction SongAnalyizer({ token, id, setSongAnalysis }) {\r\n  // let prevId = id;\r\n  useEffect(() => {\r\n    if (id !== '') {\r\n      fetch(`https://api.spotify.com/v1/audio-analysis/${id}`, {\r\n        method: 'GET',\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        mode: 'cors',\r\n        cache: 'default',\r\n      })\r\n        .then((res) => res.json())\r\n        .then(async (result) => {\r\n          // console.log('analysis response', result);\r\n          await setSongAnalysis(result);\r\n        })\r\n        .catch((err) => {\r\n          console.log('err', err);\r\n        });\r\n    }\r\n  }, [id, token, setSongAnalysis]);\r\n\r\n  return (\r\n    <div style={{ textAlign: 'left' }}>\r\n      {/* <span>token: {token}</span> <br />\r\n      <span>song id: {id}</span> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateTopProps = (state) => ({\r\n  token: state.setToken.accessToken,\r\n  id: state.setNowPlaying.id,\r\n});\r\nexport default connect(mapStateTopProps, {\r\n  setToken,\r\n  setNowPlaying,\r\n  setSongAnalysis,\r\n})(SongAnalyizer);\r\n","import { SET_SONG_ANALYSIS } from '../actions/types';\r\n\r\nconst initialState = {\r\n  bars: [],\r\n  beats: [],\r\n  sections: [],\r\n  segments: [],\r\n  tatums: [],\r\n  track: {},\r\n};\r\nexport default function setSongAnalysis(state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case SET_SONG_ANALYSIS:\r\n      return {\r\n        ...state,\r\n        bars: payload.bars,\r\n        beats: payload.beats,\r\n        sections: payload.sections,\r\n        segments: payload.segments,\r\n        tatums: payload.tatums,\r\n        track: { ...payload.track },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport setToken from './auth';\r\nimport setNowPlaying from './nowPlaying';\r\nimport setSongAnalysis from './songAnalysis';\r\nexport default combineReducers({\r\n  setToken,\r\n  setNowPlaying,\r\n  setSongAnalysis,\r\n});\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initalState = {};\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initalState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport Particles from './Components/Particles';\r\nimport MusicPlayer from './Components/MusicPlayer';\r\nimport SongAnalyizer from './Components/SongAnalyizer';\r\nimport { Provider } from 'react-redux';\r\nimport './App.css';\r\nimport store from './store';\r\n\r\nexport default function App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <div className='App'>\r\n        <MusicPlayer />\r\n        <SongAnalyizer />\r\n        <Particles\r\n          style={{ position: 'absolute', top: 0, left: 0, right: 0, bottom: 0 }}\r\n        />\r\n      </div>\r\n    </Provider>\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\n\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}