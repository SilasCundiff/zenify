{"version":3,"sources":["Components/Particles/ParticlesContainer.js","actions/types.js","actions/nowPlaying.js","actions/songAnalysis.js","Components/Particles/index.js","reducers/auth.js","Components/logo.svg","Components/MusicPlayer/Authentication.js","actions/auth.js","Components/icon.svg","Components/MusicPlayer/Footer.js","Components/MusicPlayer/Search.js","Components/MusicPlayer/index.js","reducers/nowPlaying.js","Components/SongAnalyizer.js","reducers/songAnalysis.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["songStartTimestamp","timePassed","currentSegment","SET_ACCESS_TOKEN","SET_CURRENT_SONG","SET_SONG_ANALYSIS","setNowPlaying","state","dispatch","track","type","payload","isPlaying","artists","durationMs","id","image","name","uri","progressMs","setSongAnalysis","bars","beats","sections","segments","tatums","speed","colorH","colorS","dance","opacity","vertical","horizontal","ParticlesContainer","props","getContainer","container","options","particles","move","noise","delay","value","random","enable","setNoise","init","update","generate","p","moveSpeed","color","h","s","noiseAngle","velocity","angle","length","togglePlay","requestAnimationFrame","tick","cancelAnimationFrame","timeKeeper","date","Date","progress","undefined","start","i","Math","floor","decibels","loudness_start","timbre","flatness","brightness","attack","mids","isNaN","containerRef","createRef","ParticleOptions","particlesOptions","duration","songEndTimestamp","remainingDuration","this","current","getTime","style","pointerEvents","Component","connect","ParticleVisualizer","className","initialState","accessToken","isLoggedIn","setToken","action","token","getToken","hash","useEffect","a","hashParams","r","q","window","location","substring","e","exec","decodeURIComponent","access_token","getHashParams","src","logo","alt","href","Footer","class","icon","spotifyWebApi","Spotify","useState","search","setSearch","tracks","setTracks","message","setMessage","selected","setSelected","zen","setZen","zenPlayer","setZenPlayer","setAccessToken","prev","handleSubmit","preventDefault","target","abort","searchTracks","limit","then","data","newTracks","items","map","item","push","err","console","error","returnedTracks","handleSelected","onClick","onSubmit","htmlFor","onChange","album","images","url","styles","bgColor","loaderColor","sliderColor","trackArtistColor","trackNameColor","uris","callback","getNowPlaying","nowPlaying","fetch","method","headers","Authorization","mode","cache","res","json","result","catch","log","textAlign","combineReducers","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","path","Particles","position","top","left","right","bottom","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.eba56ad0.chunk.js","sourcesContent":["import React, { Component, createRef } from 'react';\nimport Particles from 'react-tsparticles';\nimport particlesOptions from './particles.json';\nimport { connect } from 'react-redux';\nimport { setNowPlaying } from '../../actions/nowPlaying.js';\nimport { setSongAnalysis } from '../../actions/songAnalysis.js';\n\nlet speed = 1;\nlet colorH = 141;\nlet colorS = 73;\nlet dance = 0;\nlet opacity = 0.8;\nlet vertical = 0;\nlet horizontal = 0;\nlet songStartTimestamp,\n  // songEndTimestamp,\n  timePassed,\n  currentSegment;\n// currentSection,\n// currentBar,\n// currentBeat,\n// currentTatum;\n\nclass ParticlesContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.containerRef = createRef();\n    this.ParticleOptions = particlesOptions;\n    this.isPlaying = this.props.isPlaying;\n    this.duration = this.props.duration;\n    this.progress = this.props.progress;\n    this.songStartTimestamp = null;\n    this.songEndTimestamp = null;\n    this.remainingDuration = this.props.duration - this.props.progress;\n  }\n\n  componentDidMount() {\n    this.segments = this.props.segments;\n    currentSegment = this.props.segments[0];\n    // currentBeat = this.props.beats[0];\n    this.containerRef.current = this.getContainer(this.containerRef.current);\n  }\n\n  getContainer = (container) => {\n    container.options.particles.move.noise.delay.value = 0.5;\n    container.options.particles.move.noise.delay.random.enable = true;\n\n    container.setNoise({\n      init: function () {},\n      update: function () {},\n      generate: function (p) {\n        p.opacity.value = opacity;\n        p.moveSpeed = speed;\n        p.color.value.h = colorH;\n        p.color.value.s = colorS;\n        if (!p.noiseAngle) {\n          p.noiseAngle = 0;\n        }\n        p.velocity.horizontal = horizontal;\n        // p.velocity.vertical = vertical; //Not sure if I want to use this yet, makes the particles feel more mechanical and the latency more noticeable\n        // console.log('p.velocity', p.velocity)\n        p.noiseAngle = dance;\n        return {\n          angle: p.noiseAngle,\n          length: 0.2,\n        };\n      },\n    });\n    return container;\n  };\n\n  componentDidUpdate() {\n    this.segments = this.props.segments;\n    this.isPlaying = this.props.isPlaying;\n    this.remainingDuration = this.props.duration - this.props.progress;\n    this.duration = this.props.duration;\n    this.progress = this.props.progress;\n\n    let date = new Date();\n    songStartTimestamp = date.getTime();\n\n    this.togglePlay();\n  }\n  togglePlay = () => {\n    if (this.isPlaying) {\n      this.requestAnimationFrame = requestAnimationFrame(this.tick);\n    } else {\n      speed = 1;\n      colorH = 141;\n      colorS = 73;\n      dance = 0;\n      opacity = 0.8;\n      vertical = 0;\n      horizontal = 0;\n      cancelAnimationFrame(this.requestAnimationFrame);\n    }\n  };\n\n  tick = () => {\n    this.timeKeeper();\n    this.requestAnimationFrame = requestAnimationFrame(this.tick);\n  };\n\n  timeKeeper = () => {\n    const date = new Date();\n    timePassed = date - songStartTimestamp + this.progress;\n\n    if (\n      this.props.segments.length > 0 &&\n      timePassed > 0 &&\n      this.props.segments[0].start !== undefined &&\n      this.props.isPlaying\n    ) {\n      for (let i = 0; this.props.segments.length >= i; i++) {\n        if (i < this.props.segments.length - 1) {\n          if (\n            Math.floor(this.props.segments[i].start * 1000) < timePassed &&\n            Math.floor(this.props.segments[i + 1].start * 1000) > timePassed &&\n            this.props.segments[i] !== currentSegment\n          ) {\n            currentSegment = this.props.segments[i];\n            let decibels = currentSegment.loudness_start + 60;\n            let color = currentSegment.timbre[0];\n            let flatness = currentSegment.timbre[2];\n            let brightness = currentSegment.timbre[1];\n            let attack = currentSegment.timbre[3];\n            let mids = currentSegment.timbre[5];\n\n            speed = decibels * 0.2;\n            colorS = flatness * 10;\n            if (colorS > 90) {\n              colorS = 90;\n            } else if (colorS < 50) {\n              colorS = 50;\n            }\n            colorH = (color * speed) / 1.5;\n            // console.log('colorH', colorH);\n            // if (colorH > 360) {\n            //   colorH = 360;\n            // } else if (colorH < 0) {\n            //   colorH = 0;\n            // }\n            vertical = ((attack % speed) / 2) % 2;\n            if (isNaN(vertical)) {\n              vertical = 0;\n            }\n            // console.log('vertical', vertical);\n            if (i % 20 === 0) {\n              // horizontal = -mids % speed;\n              dance = brightness / 2 - mids;\n            } else {\n              dance = brightness * 2 + mids;\n              // horizontal = mids % speed;\n            }\n\n            break;\n          }\n        }\n      }\n    }\n  };\n  componentWillUnmount() {\n    this.togglePlay();\n    cancelAnimationFrame(this.requestAnimationFrame);\n  }\n\n  render() {\n    return (\n      <>\n        <Particles\n          style={{ pointerEvents: 'none' }}\n          container={this.containerRef}\n          id='tsparticles'\n          options={this.ParticleOptions}\n        />\n      </>\n    );\n  }\n}\nconst mapStateTopProps = (state) => ({\n  isPlaying: state.setNowPlaying.isPlaying,\n  duration: state.setNowPlaying.durationMs,\n  progress: state.setNowPlaying.progressMs,\n  sections: state.setSongAnalysis.sections,\n  segments: state.setSongAnalysis.segments,\n  bars: state.setSongAnalysis.bars,\n  beats: state.setSongAnalysis.beats,\n  tatums: state.setSongAnalysis.tatums,\n});\nexport default connect(mapStateTopProps, { setNowPlaying, setSongAnalysis })(\n  ParticlesContainer\n);\n","export const SET_ACCESS_TOKEN = 'SET_ACCESS_TOKEN';\nexport const SET_CURRENT_SONG = 'SET_CURRENT_SONG';\nexport const SET_SONG_ANALYSIS = 'SET_SONG_ANALYSIS';\n","import { SET_CURRENT_SONG } from './types';\n\nexport const setNowPlaying = (state) => (dispatch) => {\n  let track = state.track;\n  return dispatch({\n    type: SET_CURRENT_SONG,\n    payload: {\n      isPlaying: state.isPlaying,\n      artists: track.artists,\n      durationMs: track.durationMs,\n      id: track.id,\n      image: track.image,\n      name: track.name,\n      uri: track.uri,\n      progressMs: state.progressMs,\n    },\n  });\n};\n","import { SET_SONG_ANALYSIS } from './types';\n\nexport const setSongAnalysis = (state) => (dispatch) => {\n\n  return dispatch({\n    type: SET_SONG_ANALYSIS,\n    payload: {\n      bars: state.bars,\n      beats: state.beats,\n      sections: state.sections,\n      segments: state.segments,\n      tatums: state.tatums,\n      track: state.track,\n    },\n  });\n};\n","import React from 'react';\nimport ParticlesContainer from './ParticlesContainer';\nconst ParticleVisualizer = () => {\n  return (\n    <>\n      <header className='App-header'>\n        <ParticlesContainer />\n      </header>\n    </>\n  );\n};\n\nexport default ParticleVisualizer;\n","import { SET_ACCESS_TOKEN } from '../actions/types';\n\nconst initialState = {\n  accessToken: null,\n  isLoggedIn: false,\n};\n\nexport default function setToken(state = initialState, action) {\n  const { type, payload } = action;\n  switch (type) {\n    case SET_ACCESS_TOKEN:\n      return {\n        ...state,\n        accessToken: payload.accessToken,\n        isLoggedIn: payload.isLoggedIn,\n      };\n    default:\n      return state;\n  }\n}\n","export default __webpack_public_path__ + \"static/media/logo.2b71179e.svg\";","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getToken } from '../../actions/auth.js';\r\nimport setToken from '../../reducers/auth';\r\nimport logo from '../logo.svg';\r\nimport './authenticationStyles.css';\r\nfunction Authentication({ getToken }) {\r\n  useEffect(() => {\r\n    /**\r\n     * Obtains parameters from the hash of the URL\r\n     * @return Object\r\n     */\r\n    const getHashParams = async () => {\r\n      var hashParams = {};\r\n      var e,\r\n        r = /([^&;=]+)=?([^&;]*)/g,\r\n        q = window.location.hash.substring(1);\r\n      while ((e = r.exec(q))) {\r\n        hashParams[e[1]] = decodeURIComponent(e[2]);\r\n      }\r\n\r\n      let hash = await hashParams.access_token;\r\n\r\n      if (hash) {\r\n        await getToken(hash);\r\n      }\r\n    };\r\n    getHashParams();\r\n  }, [getToken]);\r\n\r\n  return (\r\n    <div className='authenticationBody'>\r\n      <div className='introTitle'>\r\n        Zenify\r\n        <br />\r\n        <span className='introName'> By Silvanus Designs </span>\r\n      </div>\r\n      <img src={logo} alt='Silvanus Designs' className='introLogo' />\r\n      <a href='/login'>\r\n        <button className='loginButton'>Spotify Login Required</button>\r\n      </a>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateTopProps = (state) => ({\r\n  token: state.setToken.accessToken,\r\n  isLoggedIn: state.setToken.isLoggedIn,\r\n});\r\nexport default connect(mapStateTopProps, { getToken, setToken })(\r\n  Authentication\r\n);\r\n","import { SET_ACCESS_TOKEN } from './types';\n\n\nexport const getToken = (hash) => (dispatch) => {\n\n  if (hash !== null) {\n    return dispatch({\n      type: SET_ACCESS_TOKEN,\n      payload: {\n        accessToken: hash,\n        isLoggedIn: true,\n      },\n    });\n  }\n};\n","export default __webpack_public_path__ + \"static/media/icon.dc240740.svg\";","import React from 'react';\nimport './footer.css';\n\nimport icon from '../icon.svg';\nfunction Footer() {\n  return (\n    <div>\n      <div className='footerTextContainer'>\n        <div className='linkContainer'>\n          <a href='https://github.com/SilasCundiff/zenify'>\n            <i class='fab fa-github-square'></i>\n          </a>\n          <a href='https://developer.spotify.com/documentation/web-api/'>\n            <i class='fab fa-spotify'></i>\n          </a>\n          <a href='https://silas-cundiff.dev/'>\n            <img src={icon} alt='Silvanus Designs' className='footerLogoIcon' />\n          </a>\n        </div>\n        <span className='spotifySpan'>Music provided by Spotify</span>\n        <span className='reactSpan'>\n          Made with <i class='fas fa-heart'></i> using React\n        </span>\n        <footer className='footer'>\n          Zenify - Silvanus Designs - Silas Cundiff - Copyright&copy; 2021\n        </footer>\n      </div>\n      <img src={icon} alt='Silvanus Designs' className='footerLogo' />\n    </div>\n  );\n}\n\nexport default Footer;\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { setNowPlaying } from '../../actions/nowPlaying.js';\nimport Spotify from 'spotify-web-api-js';\nimport SpotifyPlayer from 'react-spotify-web-playback';\nimport './searchStyles.css';\nimport Footer from './Footer';\nconst spotifyWebApi = new Spotify();\nfunction Search({ token, setNowPlaying }) {\n  const [search, setSearch] = useState('');\n  const [tracks, setTracks] = useState();\n  const [message, setMessage] = useState('Enter a Track');\n  const [selected, setSelected] = useState({\n    type: '',\n    id: '',\n  });\n  const [zen, setZen] = useState(false);\n  const [zenPlayer, setZenPlayer] = useState(false);\n\n  //Taken from Spotify web api example and altered to fit my needs\n  spotifyWebApi.setAccessToken(token);\n  let prev = null;\n  let results = null;\n\n  const onUserSubmit = (q) => {\n    if (prev !== null) {\n      prev.abort();\n    }\n\n    prev = spotifyWebApi.searchTracks(q, { limit: 20 });\n    prev\n      .then(\n        (data) => {\n          let newTracks = [];\n          prev = null;\n          results = data;\n          results.tracks.items.map((item) => {\n            return newTracks.push(item);\n          });\n          return newTracks;\n        },\n        (err) => {\n          console.error(err);\n        }\n      )\n      .then((returnedTracks) => {\n        // console.log('returnedTracks', returnedTracks);\n        if (returnedTracks.length > 0) {\n          setTracks(returnedTracks);\n          setMessage('Enter a Track');\n        } else {\n          setMessage('No Results Found, please try a different track name');\n        }\n      });\n  };\n\n  const handleChange = (e) => {\n    setSearch(e.target.value);\n  };\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setSearch(e.target.value);\n\n    if (search) {\n      await onUserSubmit(search);\n    }\n  };\n  const handleSelected = (type, id) => {\n    setSelected({\n      ...selected,\n      type: `${type}`,\n      id: `${id}`,\n    });\n\n    // console.log('selected', selected);\n  };\n\n  const getNowPlaying = (state) => {\n    setNowPlaying(state);\n  };\n  const handleClick = () => {\n    setZen(!zen);\n  };\n  const handleClick2 = () => {\n    setZenPlayer(!zenPlayer);\n  };\n\n  return (\n    <div>\n      <div className='buttonContainer'>\n        <button\n          className={`ZenModePlayer ${zenPlayer ? 'zen' : 'nozen'}`}\n          id='ZenPlayerButton'\n          onClick={handleClick2}\n        >\n          Zenify Player\n        </button>\n        <button\n          id='ZenButton'\n          className={`ZenMode ${zen ? 'zen' : 'nozen'}`}\n          onClick={handleClick}\n        >\n          Zenify Search\n        </button>\n      </div>\n      <div className={`spotifyBody ${zen ? 'zen' : 'nozen'}`}>\n        <div className='Search'>\n          <form className='SearchForm show' onSubmit={handleSubmit}>\n            <label htmlFor='trackSearch'>{message}</label>\n            <input\n              name='trackSearch'\n              type='text'\n              value={search || ''}\n              onChange={handleChange}\n            />\n          </form>\n        </div>\n\n        <div className={`searchResultsTable ${tracks ? 'show' : 'hide'}`}>\n          <table>\n            {tracks ? (\n              <thead>\n                <tr>\n                  <th>Album cover</th>\n                  <th>Track Name</th>\n                  <th>Album</th>\n                  <th>Artist</th>\n                </tr>\n              </thead>\n            ) : null}\n\n            {tracks ? (\n              <tbody>\n                {tracks.map((track) => {\n                  return (\n                    <tr key={`${track.type}:${track.id}`}>\n                      <td>\n                        <img\n                          className='searchResultAlbumImage'\n                          src={track.album.images[2].url}\n                          alt={`${track.album.name}`}\n                        />\n                      </td>\n                      <td\n                        onClick={() => {\n                          handleSelected(track.type, track.id);\n                        }}\n                      >\n                        {track.name}\n                      </td>\n                      <td\n                        onClick={() => {\n                          handleSelected(track.album.type, track.album.id);\n                        }}\n                      >\n                        {track.album.name}\n                      </td>\n                      <td\n                        onClick={() => {\n                          handleSelected(\n                            track.artists[0].type,\n                            track.artists[0].id\n                          );\n                        }}\n                      >\n                        {track.artists[0].name}\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            ) : null}\n          </table>\n        </div>\n      </div>\n      <div className={`Player ${zenPlayer ? 'zen' : 'nozen'}`}>\n        {selected.id ? (\n          <SpotifyPlayer\n            styles={{\n              bgColor: '#191414',\n              color: '#1DB954',\n              loaderColor: '#1DB954',\n              sliderColor: '#1DB954',\n              trackArtistColor: '#1DB954',\n              trackNameColor: '#1DB954',\n            }}\n            token={token}\n            uris={[`spotify:${selected.type}:${selected.id}`]}\n            callback={(state) => {\n              getNowPlaying(state);\n            }}\n          />\n        ) : null}\n      </div>\n      {!zen ? <Footer /> : null}\n    </div>\n  );\n}\n\nexport default connect(null, { setNowPlaying })(Search);\n","import React from 'react';\nimport Authentication from './Authentication';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Search from './Search';\nfunction MusicPlayer({ isLoggedIn, token }) {\n  return (\n    <div>\n      {!isLoggedIn ? <Authentication /> : null}\n      {isLoggedIn && <Search token={token} />}\n    </div>\n  );\n}\nMusicPlayer.propTypes = {\n  token: PropTypes.string,\n  isLoggedIn: PropTypes.bool,\n};\nconst mapStateTopProps = (state) => ({\n  token: state.setToken.accessToken,\n  isLoggedIn: state.setToken.isLoggedIn,\n});\nexport default connect(mapStateTopProps)(MusicPlayer);\n","import { SET_CURRENT_SONG } from '../actions/types';\n\nconst initialState = {\n  isPlaying: false,\n  artists: '',\n  durationMs: 0,\n  id: '',\n  image: '',\n  name: '',\n  uri: '',\n};\n\nexport default function setNowPlaying(state = initialState, action) {\n  const { type, payload } = action;\n  switch (type) {\n    case SET_CURRENT_SONG:\n      return {\n        ...state,\n        isPlaying: payload.isPlaying,\n        artists: payload.artists,\n        durationMs: payload.durationMs,\n        id: payload.id,\n        image: payload.image,\n        name: payload.name,\n        uri: payload.uri,\n        progressMs: payload.progressMs,\n      };\n    default:\n      return state;\n  }\n}\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport setToken from '../reducers/auth';\nimport setNowPlaying from '../reducers/nowPlaying';\nimport { setSongAnalysis } from '../actions/songAnalysis';\nfunction SongAnalyizer({ token, id, setSongAnalysis, nowPlaying }) {\n  useEffect(() => {\n    if (id !== '') {\n      fetch(`https://api.spotify.com/v1/audio-analysis/${id}`, {\n        method: 'GET',\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n        mode: 'cors',\n        cache: 'default',\n      })\n        .then((res) => res.json())\n        .then(async (result) => {\n          // console.log('analysis response', result);\n          await setSongAnalysis(result);\n        })\n        .catch((err) => {\n          console.log('err', err);\n        });\n    }\n  }, [id, token, setSongAnalysis, nowPlaying]);\n\n  return (\n    <div style={{ textAlign: 'left' }}>\n      {/* <span>token: {token}</span> <br />\n      <span>song id: {id}</span> */}\n    </div>\n  );\n}\n\nconst mapStateTopProps = (state) => ({\n  token: state.setToken.accessToken,\n  id: state.setNowPlaying.id,\n});\nexport default connect(mapStateTopProps, {\n  setToken,\n  setNowPlaying,\n  setSongAnalysis,\n})(SongAnalyizer);\n","import { SET_SONG_ANALYSIS } from '../actions/types';\n\nconst initialState = {\n  bars: [],\n  beats: [],\n  sections: [],\n  segments: [],\n  tatums: [],\n  track: {},\n};\nexport default function setSongAnalysis(state = initialState, action) {\n  const { type, payload } = action;\n  switch (type) {\n    case SET_SONG_ANALYSIS:\n      return {\n        ...state,\n        bars: payload.bars,\n        beats: payload.beats,\n        sections: payload.sections,\n        segments: payload.segments,\n        tatums: payload.tatums,\n        track: { ...payload.track },\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport setToken from './auth';\nimport setNowPlaying from './nowPlaying';\nimport setSongAnalysis from './songAnalysis';\nexport default combineReducers({\n  setToken,\n  setNowPlaying,\n  setSongAnalysis,\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initalState = {};\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initalState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import React from 'react';\nimport Particles from './Components/Particles';\nimport MusicPlayer from './Components/MusicPlayer';\nimport SongAnalyizer from './Components/SongAnalyizer';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport './App.css';\nimport store from './store';\n\nexport default function App() {\n  return (\n    <Provider store={store}>\n      <BrowserRouter>\n        <Route path='/'>\n          <div className='App'>\n            <MusicPlayer />\n            <SongAnalyizer />\n            <Particles\n              style={{\n                position: 'absolute',\n                top: 0,\n                left: 0,\n                right: 0,\n                bottom: 0,\n              }}\n            />\n          </div>\n        </Route>\n      </BrowserRouter>\n    </Provider>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}